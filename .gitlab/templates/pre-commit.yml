---
.pre-commit-template:
  stage: lint
  image: docker.io/python:3.13
  variables:
    PRE_COMMIT_HOME: ${CI_PROJECT_DIR}/.cache/pre-commit
    GIT_USER_EMAIL: "ci-runner@gitlab.com"
    GIT_USER_NAME: "GitLab CI"
    UV_LINK_MODE: copy
  before_script:
    - curl -LsSf https://astral.sh/uv/install.sh | sh
    - export PATH="$HOME/.local/bin:$PATH"
    - git config --global user.email "${GIT_USER_EMAIL}"
    - git config --global user.name "${GIT_USER_NAME}"
    # Dynamic token configuration:
    # - For MR: Uses CI_NOPROTECTED_TOKEN (unprotected, temporary)
    # - For main: Uses CI_PROTECTED_TOKEN (protected, for main branch)
    - |
      if [ -n "${GIT_TOKEN_VAR}" ] && [ -n "${GIT_REPO_URL}" ]; then
        git remote set-url origin "${GIT_REPO_URL}"
      elif [ -n "${GIT_USER_BOT}" ] && [ -n "${GIT_TOKEN_VAR}" ] && [ -n "${GIT_HOST}" ] && [ -n "${GIT_PROJECT_PATH}" ]; then
        TOKEN_VALUE=$(eval echo \$${GIT_TOKEN_VAR})
        git remote set-url origin "https://${GIT_USER_BOT}:${TOKEN_VALUE}@${GIT_HOST}/${GIT_PROJECT_PATH}.git"
      fi
    - uv venv
    - source .venv/bin/activate
    - uv pip install pre-commit
  script:
    - pre-commit install
    - pre-commit run -a || true
    - |
      if [ -n "$CI_MERGE_REQUEST_IID" ]; then
        if ! git diff --quiet; then
          git add -u
          git commit -m "Auto-format with pre-commit [skip ci]"
          if [ -n "${GIT_TOKEN_VAR}" ] && ([ -n "${GIT_REPO_URL}" ] || [ -n "${GIT_USER_BOT}" ]); then
            git push origin HEAD:$CI_COMMIT_REF_NAME
          fi
        fi
      fi
  cache:
    key: "pre-commit-$CI_COMMIT_REF_SLUG"
    paths:
      - ".venv/"
      - ${PRE_COMMIT_HOME}
    policy: pull-push
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      allow_failure: false
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      allow_failure: false
